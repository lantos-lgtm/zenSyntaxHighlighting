
$schema: https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
name: Zen programing language
scopeName: source.zen
patterns:
  - include: "#comments"
  - include: "#numbers"
  - include: "#strings"
  - include: "#keywords"
  - include: "#operators"
  - include: "#constantDefinitions" # this isn't working atm TODO
  - include: "#types"
  - include: "#functionDefinitions"
  - include: "#functionCalls"
  - include: "#variables"
repository:
    comments:
        name: comment.line.double-slash.zen
        begin: //
        end: \n
    numbers:
        name: constant.numeric.zen
        match: \b\d[\d_]*(\.?)[\d_]*\b
    strings:
        name: string.quoted.double.zen
        begin: \"
        end: \"
        patterns:
        -
            name: constant.character.escape.zen
            match: \.
    operators:
        patterns:
        -
            name: keyword.operator.zen
            match: ==|!=|>=|<=
        -
            name: keyword.operator.zen
            match: \+|\-|\*|\/|\^|\%
            
    keywords:
        name: keyword.control.zen
        match: \b(if|while|for|return|args|body)\b
    types:
        name: entity.name.type.zen
        match: \b[A-Z][a-zA-Z|\d]*\b
    typeCalling:
        match: (\b[A-Z][a-zA-Z]*\b)\(
        captures:
            '1':
                name: entity.name.type.zen
    variables:
        name: variable.name
        match: \b[a-z][a-zA-Z|\d]*\b

    functionDefinitions:
        name: entity.name.function.zen
        match: (\b[a-z][a-zA-Z]*\b):(\s+)?(Function)
        captures:
            '1':
                name: entity.name.function.zen
            '3':
                name: entity.name.type.zen
    # constantDefinitions:
    #     name: entity.name.constant.zen
    #     match: \b[A-Z_]+\b

    functionCalls:
        match: \b([a-z][a-zA-Z]*)\b(\s+)?\(
        captures:
            '1':
                name: entity.name.function.zen